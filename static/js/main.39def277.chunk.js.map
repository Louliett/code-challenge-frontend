{"version":3,"sources":["redux/constants/image.constants.js","redux/reducers/image.reducer.js","redux/reducers/index.js","redux/store.js","components/header/Header.jsx","components/header/HeaderContainer.js","components/image_grid/ImageGrid.jsx","adapters/image.adapter.js","redux/actions/image.actions.js","components/image_grid/ImageGridContainer.js","services/lazy.loading.service.js","components/modal/ImageModal.jsx","components/modal/ImageModalContainer.js","components/home/Home.jsx","components/home/HomeContainer.js","App.js","index.js"],"names":["imageConstant","defaultState","images","loading","error","errorMessage","pageNumber","apiHasMoreImgs","openImageModal","openInfoModal","imageInfo","description","urls","raw","user","first_name","last_name","imageIndex","rootReducer","combineReducers","imageReducer","state","action","type","erorr","payload","hasMore","firstIndex","lastIndex","length","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Header","className","HeaderContainer","ImageGrid","props","Grid","centered","stackable","padded","map","image","index","Ref","innerRef","lastImageRef","Column","computer","mobile","src","regular","alt","alt_description","onClick","onImageClick","id","Loader","active","inline","Message","negative","size","Content","Icon","name","ACCESS_KEY","API_URL","imageAdapter","fetchImagesPerPage","a","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","response","json","message","imageAction","getImagesPerPage","dispatch","then","errors","failure","undefined","ok","success","catch","setPageNumber","setImageInfo","setNewImageInfo","newIndex","closeImageModal","ImageGridContainer","useDispatch","useSelector","observer","useRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","ObserveLastElement","useEffect","ImageModal","Modal","closeIcon","open","onClose","onChevronClick","color","onInfoClick","dimmer","closeInfoModal","username","width","height","Date","created_at","toLocaleDateString","sponsorship","sponsor","likes","onDownload","colo","ImageModalContainer","useState","setOpenInfoModal","direction","image_src","file","blob","link","document","createElement","href","URL","createObjectURL","setAttribute","click","Home","HomeContainer","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.39def277.chunk.js","sourcesContent":["export const imageConstant = {\r\n    GET_IMAGES_REQUEST: 'GET_IMAGES_REQUEST',\r\n    GET_IMAGES_SUCCESS: 'GET_IMAGES_SUCCESS',\r\n    GET_IMAGES_FAILURE: 'GET_IMAGES_FAILURE',\r\n\r\n    SET_PAGE_NUMBER: 'SET_PAGE_NUMBER',\r\n    SET_LOADING: 'SET_LOADING',\r\n    SET_ERROR: 'SET_ERROR',\r\n    SET_API_HAS_MORE: 'SET_API_HAS_MORE',\r\n\r\n    OPEN_IMAGE_MODAL: 'OPEN_IMAGE_MODAL',\r\n    CLOSE_IMAGE_MODAL: 'CLOSE_IMAGE_MODAL',\r\n\r\n    SET_IMAGE_INFO: 'SET_IMAGE_INFO',\r\n    SET_NEW_IMAGE_INFO: 'SET_NEW_IMAGE_INFO'\r\n}","import { imageConstant } from '../constants';\r\n\r\nconst defaultState = {\r\n    images: [],\r\n    loading: true,\r\n    error: false,\r\n    errorMessage: '',\r\n    pageNumber: 1,\r\n    apiHasMoreImgs: false,\r\n    openImageModal: false,\r\n    openInfoModal: false,\r\n    imageInfo: {\r\n        description: 'Loading...',\r\n        urls: {\r\n            raw: 'Loading',\r\n        },\r\n        user: {\r\n            first_name: 'Loading...',\r\n            last_name: 'Loading...'\r\n        }\r\n    },\r\n    imageIndex: null\r\n}\r\n\r\nexport function imageReducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case imageConstant.GET_IMAGES_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: false,\r\n                errorMessage: '' \r\n            }\r\n        case imageConstant.GET_IMAGES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                erorr: false,\r\n                errorMessage: '',\r\n                images: [...state.images, ...action.payload.images],\r\n                apiHasMoreImgs: action.payload.hasMore\r\n            }\r\n        case imageConstant.GET_IMAGES_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                errorMessage: action.payload,\r\n                loading: false,\r\n                apiHasMoreImgs: false\r\n            }\r\n        case imageConstant.SET_PAGE_NUMBER:\r\n            return {\r\n                ...state,\r\n                pageNumber: state.pageNumber + 1\r\n            }\r\n        case imageConstant.OPEN_IMAGE_MODAL:\r\n            return {\r\n                ...state,\r\n                openImageModal: true,\r\n                imageInfo: action.payload.imageInfo,\r\n                imageIndex: action.payload.imageIndex\r\n            }\r\n        case imageConstant.CLOSE_IMAGE_MODAL:\r\n            return {\r\n                ...state,\r\n                openImageModal: false,\r\n                imageInfo: defaultState.imageInfo\r\n            }\r\n        case imageConstant.SET_NEW_IMAGE_INFO:\r\n            const firstIndex = 0;\r\n            const lastIndex = state.images.length - 1;\r\n            if (action.payload < firstIndex) {\r\n                return {\r\n                    ...state,\r\n                    imageInfo: state.images[firstIndex],\r\n                    imageIndex: firstIndex\r\n                }       \r\n            } else if (action.payload > lastIndex) {\r\n                return {\r\n                    ...state,\r\n                    imageInfo: state.images[lastIndex],\r\n                    imageIndex: lastIndex,\r\n                    pageNumber: state.pageNumber + 1\r\n                }  \r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    imageInfo: state.images[action.payload],\r\n                    imageIndex: action.payload\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { imageReducer } from './image.reducer';\r\n\r\n\r\n//Here we can add multiple reducers\r\nexport const rootReducer = combineReducers ({\r\n    imageReducer\r\n});","import thunk from 'redux-thunk';\r\nimport { applyMiddleware, createStore, compose } from 'redux';\r\nimport { rootReducer } from './reducers';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nexport const store = createStore(\r\n    rootReducer, \r\n    composeEnhancers(applyMiddleware(thunk))\r\n);","import './header.css';\r\n\r\nexport function Header() {\r\n\r\n    return(\r\n        <div className='splash_header'>\r\n            <span className='app_title'><b>Splash</b></span>\r\n        </div>\r\n    );\r\n}","import { Header } from './Header';\r\n\r\nexport function HeaderContainer() {\r\n\r\n    return(\r\n        <Header />\r\n    );\r\n}","import {Grid, Ref, Loader, Message, Icon} from 'semantic-ui-react';\r\nimport './image-grid.css';\r\n\r\nexport function ImageGrid(props) {\r\n    return (\r\n        <div className='image_grid'>\r\n            <Grid centered stackable padded='horizontally'>\r\n                    {(props.images).map((image, index) => {\r\n                        if (props.images.length === index + 1) {\r\n                            return (\r\n                                <Ref key={image.id} innerRef={props.lastImageRef}>\r\n                                    <Grid.Column key={image.id} computer={5} mobile={16}>\r\n                                            <img\r\n                                                className='image'\r\n                                                src={image.urls.regular} \r\n                                                alt={image.alt_description} \r\n                                                onClick={ () => {props.onImageClick(image, index)}} \r\n                                            />\r\n                                    </Grid.Column>\r\n                                </Ref>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <Grid.Column key={image.id} computer={5} mobile={16}>\r\n                                    {/* <div className='image_div'> */}\r\n                                        <img\r\n                                            className='image'\r\n                                            src={image.urls.regular} \r\n                                            alt={image.alt_description} \r\n                                            onClick={ () => {props.onImageClick(image, index)}} \r\n                                        />\r\n                                    {/* </div> */}\r\n                                </Grid.Column>\r\n                            )\r\n                        }\r\n                    })}\r\n                    <br/>\r\n                    <div>{props.loading && <Loader active inline='centered' />}</div>\r\n                    <div>\r\n                        {\r\n                        props.error && \r\n                        <Message negative size='large'>\r\n                            <Message.Content>\r\n                                <Icon name='exclamation triangle' size='large'></Icon>\r\n                                <Message.Header>Error</Message.Header>\r\n                                <p>{props.errorMessage}</p>\r\n                            </Message.Content>\r\n                        </Message>\r\n                        }\r\n                    </div>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","const ACCESS_KEY = 'BCLphaiVtu7iU1ttolxvP3lk1uYjbNyCzMSfKi8OP-w';\r\nconst API_URL = 'https://api.unsplash.com/photos';\r\n\r\nexport const imageAdapter = {\r\n    fetchImagesPerPage\r\n}\r\n\r\nasync function fetchImagesPerPage(pageNumber) {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Authorization\", `Client-ID ${ACCESS_KEY}`);\r\n        var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n      };\r\n    \r\n    let response = await fetch(`${API_URL}?page=${pageNumber}&per_page=30`, requestOptions);\r\n    //console.log(response, ' respanse');\r\n    let message = await response.json();\r\n    //console.log(message, ' message');\r\n    return message;\r\n}","import { imageConstant } from '../constants';\r\nimport { imageAdapter } from '../../adapters';\r\n\r\nexport const imageAction = {\r\n    getImagesPerPage,\r\n    setPageNumber,\r\n    setImageInfo,\r\n    setNewImageInfo,\r\n    openImageModal,\r\n    closeImageModal\r\n}\r\n\r\nfunction getImagesPerPage(pageNumber) {\r\n    return dispatch => {\r\n        dispatch(request());\r\n\r\n        imageAdapter.fetchImagesPerPage(pageNumber)\r\n        .then(images => {\r\n            //console.log('images ', images);\r\n            if (images.errors) {\r\n                let errorMessage = images.errors[0];\r\n                //console.log('bad end', images);\r\n                dispatch(failure(errorMessage))\r\n            } else if(images.ok !== undefined && images.ok === false) {\r\n                dispatch(failure('Too Many Requests!'));   \r\n            } else {\r\n                const hasMore = (images.length > 0);\r\n                dispatch(success(images, hasMore));\r\n            }\r\n        })\r\n        .catch(error => { \r\n            //console.log('catch trigards', error);\r\n            dispatch(failure(error)) \r\n        });\r\n    }\r\n\r\n    function request() { return { type: imageConstant.GET_IMAGES_REQUEST } }\r\n    function success(images, hasMore) {\r\n        return { \r\n            type: imageConstant.GET_IMAGES_SUCCESS, \r\n            payload: { \r\n                images,\r\n                hasMore\r\n            }\r\n        }\r\n    }\r\n    function failure(error) { return { type: imageConstant.GET_IMAGES_FAILURE, payload: error } }\r\n}\r\n\r\nfunction setPageNumber() {\r\n    return { type: imageConstant.SET_PAGE_NUMBER }\r\n}\r\n\r\nfunction openImageModal(imageInfo, imageIndex) {\r\n    return { \r\n        type: imageConstant.OPEN_IMAGE_MODAL,\r\n        payload: { imageInfo, imageIndex }\r\n    }\r\n}\r\n\r\nfunction closeImageModal() {\r\n    return { type: imageConstant.CLOSE_IMAGE_MODAL }\r\n}\r\n\r\nfunction setImageInfo(image) {\r\n    return { \r\n        type: imageConstant.SET_IMAGE_INFO,\r\n        payload: image\r\n    }\r\n}\r\n\r\nfunction setNewImageInfo(newIndex) {\r\n    return {\r\n        type: imageConstant.SET_NEW_IMAGE_INFO,\r\n        payload: newIndex\r\n    }\r\n}","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ObserveLastElement } from '../../services';\r\nimport { ImageGrid } from './ImageGrid';\r\nimport { imageAction } from '../../redux/actions';\r\n\r\nexport function ImageGridContainer() {\r\n\r\n    const dispatch = useDispatch();\r\n    const images = useSelector(state => (state.imageReducer.images));\r\n    const loading = useSelector(state => (state.imageReducer.loading));\r\n    const error = useSelector(state => (state.imageReducer.error));\r\n    const errorMessage = useSelector(state => (state.imageReducer.errorMessage));\r\n    const apiHasMoreImgs = useSelector(state => (state.imageReducer.apiHasMoreImgs));\r\n    const pageNumber = useSelector(state => (state.imageReducer.pageNumber));\r\n    const lastImageRef = ObserveLastElement(loading, imageAction, dispatch, apiHasMoreImgs);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(imageAction.getImagesPerPage(pageNumber));\r\n    }, [pageNumber]);\r\n\r\n\r\n    function handleImageClick(imageInfo, imageIndex) {\r\n        dispatch(imageAction.openImageModal(imageInfo, imageIndex));\r\n    }\r\n\r\n    return(\r\n        <ImageGrid\r\n            images={images}\r\n            loading={loading}\r\n            error={error}\r\n            errorMessage={errorMessage}\r\n            lastImageRef={lastImageRef}\r\n            onImageClick={handleImageClick}\r\n        />\r\n    );\r\n}","import { useCallback, useRef } from \"react\";\r\n\r\n\r\nexport function ObserveLastElement(loading, action, dispatch, apiHasMoreImgs) {\r\n    const observer = useRef();\r\n    const lastImageRef = useCallback(node => {\r\n        if(loading) return;\r\n        if(observer.current) observer.current.disconnect();\r\n        observer.current = new IntersectionObserver(entries => {\r\n            if(entries[0].isIntersecting && apiHasMoreImgs) {\r\n                dispatch(action.setPageNumber());\r\n            }\r\n        });\r\n        if(node) observer.current.observe(node);\r\n    }, [loading, apiHasMoreImgs]);\r\n\r\n    return lastImageRef;\r\n}","import { Modal, Icon } from 'semantic-ui-react';\r\nimport './image-modal.css';\r\n\r\nexport function ImageModal(props) {\r\n    return (\r\n            <Modal closeIcon open={props.openImageModal} centered={false} onClose={props.closeImageModal} className='modal_content' >\r\n                <div className='left_chevron' onClick={() => {props.onChevronClick(-1)}}>\r\n                    <Icon size='huge' color='grey' name='chevron left' />\r\n                </div>\r\n                <img className='image_modal' src={props.imageInfo.urls.regular} alt={props.imageInfo.alt_description} />\r\n                <div className='right_chevron' onClick={() => {props.onChevronClick(1)}}>\r\n                    <Icon size='huge' color='grey' name='chevron right' />\r\n                </div>\r\n                <div className='info_circle' onClick={() => {props.onInfoClick()}}>\r\n                    <Icon size='huge' color='grey' name='info circle' />\r\n                </div>\r\n                <Modal dimmer='inverted' closeIcon open={props.openInfoModal} onClose={props.closeInfoModal} size='small' className='modal_info'>\r\n                    <div className='top_half'>\r\n                        <img src={props.imageInfo.urls.regular} alt={props.imageInfo.alt_description} className='info_image'></img>\r\n                        <div className='description_username'>\r\n                            <h2> Title: {props.imageInfo.description || 'Splash!'} </h2>\r\n                            <h3> Author: {props.imageInfo.user.username} </h3>\r\n                        </div>                        \r\n                    </div>\r\n                    <hr className='modal_divider'/>\r\n                    <div className='bottom_half'>\r\n                        <div className='meta_info'>\r\n                            <p>\r\n                                Width: {props.imageInfo.width}\r\n                            </p>\r\n                            <p>\r\n                                Height: {props.imageInfo.height}\r\n                            </p>\r\n                            <p>\r\n                                Created On: { new Date(props.imageInfo.created_at).toLocaleDateString() }\r\n                            </p>\r\n                            <p>\r\n                                Sponsored By: {props.imageInfo.sponsorship === null || props.imageInfo.sponsorship === undefined  ? 'N/A' : props.imageInfo.sponsorship.sponsor.name}\r\n                            </p>\r\n                        </div>\r\n                        <div className='like_icon'>\r\n                            <Icon name='like' color='red' size='large'/> {props.imageInfo.likes}\r\n                        </div>\r\n                        <div className='download_icon' onClick={() => {props.onDownload(props.imageInfo.urls.raw)}}>\r\n                            <Icon name='download' color='black' size='large' colo='grey' />\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </Modal>\r\n        \r\n    );\r\n}","import { useDispatch, useSelector } from 'react-redux';\r\nimport { ImageModal } from './ImageModal';\r\nimport { imageAction } from '../../redux/actions';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport function ImageModalContainer(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const openImageModal = useSelector(state => (state.imageReducer.openImageModal));\r\n    const [openInfoModal, setOpenInfoModal] = useState(false);\r\n    const imageInfo = useSelector(state => (state.imageReducer.imageInfo));\r\n    const imageIndex = useSelector(state => (state.imageReducer.imageIndex));\r\n\r\n    function handleImageModalClose() {\r\n        dispatch(imageAction.closeImageModal());\r\n    }\r\n\r\n    function handleInfoModalClose() {\r\n        setOpenInfoModal(false);\r\n    }\r\n\r\n    function handleInfoClick() {\r\n        setOpenInfoModal(true);\r\n    }\r\n\r\n    function handleChevronClick(direction) {\r\n        let newIndex = imageIndex + direction;\r\n        dispatch(imageAction.setNewImageInfo(newIndex));\r\n    }\r\n\r\n    function handleDownload(image_src) {\r\n\r\n        fetch(image_src).then(async function(file) {\r\n            const blob = await file.blob();\r\n            var link = document.createElement(\"a\");\r\n            link.href = URL.createObjectURL(blob);\r\n            link.setAttribute(\"download\", 'image.jpg');\r\n            link.click();\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <ImageModal \r\n            openImageModal={openImageModal}\r\n            closeImageModal={handleImageModalClose}\r\n            openInfoModal={openInfoModal}\r\n            closeInfoModal={handleInfoModalClose}\r\n            imageInfo={imageInfo}\r\n            onChevronClick={handleChevronClick}\r\n            onInfoClick={handleInfoClick}\r\n            onDownload={handleDownload}\r\n        />\r\n    );\r\n}","import './home.css';\r\nimport { HeaderContainer } from '../header/HeaderContainer';\r\nimport { ImageGridContainer } from '../image_grid/ImageGridContainer';\r\nimport { ImageModalContainer } from '../modal/ImageModalContainer';\r\n\r\n\r\n//This is a parent component\r\nexport function Home(props) {\r\n    return (\r\n        <div className='home_div'>\r\n            <HeaderContainer />\r\n            <ImageGridContainer />\r\n            <ImageModalContainer />\r\n        </div>\r\n    );\r\n}","import { Home } from './Home';\r\n\r\nexport function HomeContainer(props) {\r\n    \r\n    return (\r\n        <Home />\r\n    );\r\n}","import './app.css';\nimport { HomeContainer } from '../src/components/home/HomeContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomeContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store } from './redux';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}